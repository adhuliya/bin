#!/usr/bin/env bash

# Author: Anshuman Dhuliya [AD] (anshumandhuliya@gmail.com)
#
# Commit and sync all git repos whose directory is suffixed with `-git`

MLOCATE_DB=$MYDATA/local/files/mlocate.db;

# update the file database
updatedb -l 0 -o $MLOCATE_DB;

TMP_OUT_FILE=`mktemp /dev/shm/tmp.XXXXXXXX`;
TMP_FILE=`mktemp /dev/shm/tmp.XXXXXXXX`;
TMP_REPO_LIST=`mktemp /dev/shm/tmp.XXXXXXXX`;

echo -e "\nStarting to sync repos";
echo "TMP_FILE:       $TMP_FILE";
echo "TMP_OUT_FILE:   $TMP_OUT_FILE";
echo "TMP_REPO_LIST:  $TMP_REPO_LIST";

# populate the TMP_FILE with files that end with '-git'
locate -d $MLOCATE_DB -r "-git$" > $TMP_FILE;

count=0
while read file; do
  if [[ -d "$file" && -d "$file/.git" ]]; then
    # its a directory containing another directory .git (thus it is a gitrepo)
    if [[ ${file:0:5} == "/home" ]]; then
      # must be in /home sub directory tree
      count=$((count+1));
      echo "$file" >> $TMP_REPO_LIST;
      cd $file;
      echo -e "\n\nSyncing repo: `pwd`" |& tee -a $TMP_OUT_FILE;
      gitsync |& tee -a $TMP_OUT_FILE;
    fi
  fi
done < $TMP_FILE;

echo -e "\n\nRepos synced:\n";
cat $TMP_REPO_LIST;
echo -e "\nSynced $count repos.";

# remove all tmp files except $TMP_OUT_FILE
if [[ -e $TMP_FILE ]]; then rm $TMP_FILE; fi
if [[ -e $TMP_REPO_LIST ]]; then rm $TMP_REPO_LIST; fi

echo -e "\n";
echo "TMP_FILE:       $TMP_FILE (removed)";
echo "TMP_REPO_LIST:  $TMP_REPO_LIST (removed)";
echo "TMP_OUT_FILE:   $TMP_OUT_FILE (remove it manually)";

# Check for errors
errorcount="`grep ERROR: $TMP_OUT_FILE | wc -l`";
if [[ $errorcount -ne 0 ]]; then
  echo "ERROR: $errorcount errors.";
else
  echo "";
fi

