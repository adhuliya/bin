#!/usr/bin/env python3

import subprocess as sub
import os
import sys

# list of directories having git repository
gitdirs = [
"/home/codeman/mydata/git/bin-git",
"/home/codeman/mydata/git/configs-git",
"/home/codeman/mydata/git/mynotes-git",
"/home/codeman/mydata/git/research/misc-git",
"/home/codeman/mydata/git/research/meetings-git",
"/home/codeman/mydata/git/research/resources-git",
"/home/codeman/mydata/git/research/code/benchmarks-git",
"/home/codeman/mydata/git/research/code/cs618project-git",
"/home/codeman/mydata/git/research/writeups/mandar-report-git",
"/home/codeman/mydata/git/research/writeups/mywriteups-git",
"/home/codeman/mydata/git/research/writeups/research-notes-git",
"/home/codeman/mydata/git/research/writeups/cs618-project-report-git",
"/home/codeman/mydata/git/ws/gate-notes-git",
"/home/codeman/mydata/git/ws/web-filebrowser-git",
"/home/codeman/mydata/git/ws/web-organizer-git",
]

gitcommands = [
"""git add --all""",
"""git commit -m 'automated-update'""",
"""git fetch origin master""",
"""git merge -m "automated-merge" origin/master""",
"""git push origin master""",
]

def syncall():
    err = 0
    tmperr = 0
    for dir in gitdirs:
        tmperr = 0
        print(os.linesep, "$>>> ", dir, os.linesep, sep="")

        try:
            os.chdir(dir)
        except FileNotFoundError as e:
            print("DIRECTORY NOT FOUND", file=sys.stderr)
            # tmperr = 1
            err += 1
            continue

        for cmd in gitcommands:
            print("$>", cmd)
            cp = sub.run(cmd, shell=True)
            print("$>", "ReturnCode :", cp.returncode)
            if cmd.find(" commit ") >= 0 and cp.returncode > 1:
                tmperr = 1
            elif cp.returncode != 0:
                tmperr = 1

        if tmperr == 0:
            print("FINISHED WITH SUCCESS")
        else:
            err += 1
            print("FINISHED WITH ERRORS!!", file=sys.stderr)

    return err


if __name__ == "__main__":
  print("STARTING PYTHON SCRIPT", os.linesep)
  err = syncall()
  if err:
      print(os.linesep, "{} ERRORS".format(err), os.linesep, sep="", file=sys.stderr)
  else:
      print(os.linesep, "SUCCESS.", os.linesep, sep="")


