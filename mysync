#!/usr/bin/env python3

"""
#My Sync/Backup Plan

---

Backup script for all the data in the files/folders in the master directory ~/mydata/* and sync application settings.

"""

import sys, os
import re

usagehelpmsg = """Usage: mysync [list|listall] <rootdir>

[list|listall] are optional subcommands.

list    : lists all directories that have '.git' subdirectory and '-git' suffix.
listall : lists all directories that have '.git' subdirectory.

"""

def findgitrepos(rootdir):
    gitrepos = []
    for root, dirs, files in os.walk(rootdir, topdown=True):
        if ".git" in dirs and root.endswith("-git"):
            gitrepos.append(root) 
            dirs[:] = []
    return gitrepos


def findallgitrepos(rootdir):
    gitrepos = []
    for root, dirs, files in os.walk(rootdir, topdown=True):
        if ".git" in dirs:
            gitrepos.append(root) 
            dirs[:] = []
    return gitrepos

def mysync(gitrepos):
    for gitrepo in gitrepos:
        pass


if __name__ == "__main__":
    if len(sys.argv) < 2:
        print(usagehelpmsg, file=sys.stderr)
        exit()

    rootdir = subcmd = gitrepos = None
    if len(sys.argv) == 2:
        rootdir = sys.argv[1]
        gitrepos = findgitrepos(rootdir)
    elif len(sys.argv) == 3:
        subcmd = sys.argv[1]
        rootdir = sys.argv[2]
        if subcmd.strip().lower() == "list":
            gitrepos = findgitrepos(rootdir)
            print(os.linesep.join(gitrepos))
        elif subcmd.strip().lower() == "listall":
            gitrepos = findallgitrepos(rootdir)
            print(os.linesep.join(gitrepos))
    else:
        print(usagehelpmsg, file=sys.stderr)
        exit()


